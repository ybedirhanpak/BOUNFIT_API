import mongoose from "mongoose";
import config from "../config";

const connectMongoose = () => {
    console.log("Connection URL:", config.databaseURL);

    mongoose.connect(
        config.databaseURL!,
        {
            useNewUrlParser: true,
            useFindAndModify: false,
            useUnifiedTopology: true
        }
    )
        .then(() => {
            console.log(`üëå  Database connection completed. üëå`);
        })
        .catch((error) => {
            console.log(`‚ùå  Database connection error ${error} ‚ùå`);
        });
}

export const connectDatabase = () => {
    let db = mongoose.connection;

    db.on('connecting', () => {
        console.log(`‚è≥  Connecting to Database... ‚è≥`);
    });

    db.on('error', (error) => {
        console.log(`‚ùå  Database connection error ${error} ‚ùå`);
        mongoose.disconnect();
    });
    db.on('connected', () => {
        console.log(`üÜó  Database connected. üÜó`);

    });
    db.once('open', () => {
        console.log(`üëç  Database connection opened!. üëç`);

    });
    db.on('reconnected', () => {
        console.log(`ü§ò  Database reconnected! ü§ò`);

    });
    db.on('disconnected', () => {
        console.log(`üõë  Database disconnected. Trying to reconnect... üõë`);
        connectMongoose();
    });

    connectMongoose();
}

export const closeDatabase = async () => {
    return new Promise((resolve, reject) => {
        mongoose.disconnect()
            .then(() => {
                console.log(`################################################\n` +
                    `     üêç  Database disconnected successfully. üêç\n` +
                    `################################################\n`
                );
                resolve();
            }).catch((error) => {
                console.log(`################################################\n` +
                    `     ‚ùå  Error occured when database tried to disconnect: ${error} ‚ùå\n` +
                    `################################################\n`
                );
                reject();
            })
    });
}

